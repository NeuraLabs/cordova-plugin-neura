<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.neura.cordova.sample"
    android:hardwareAccelerated="true"
    android:versionCode="10000"
    android:versionName="1.0.0" >

    <uses-sdk
        android:minSdkVersion="19"
        android:targetSdkVersion="27" />

    <supports-screens
        android:anyDensity="true"
        android:largeScreens="true"
        android:normalScreens="true"
        android:resizeable="true"
        android:smallScreens="true"
        android:xlargeScreens="true" />

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permisssion.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.VIBRATE" />

    <uses-feature
        android:name="android.hardware.bluetooth"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.location"
        android:required="false" /> <!-- Permission level : dangerous -->
    <uses-permission android:name="android.permission.BLUETOOTH" /> <!-- Permission level : normal -->
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" /> <!-- Permission level : normal -->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" /> <!-- Permission level : normal -->
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" /> <!-- Permission level : normal -->
    <uses-permission android:name="android.permission.CHANGE_WIFI_MULTICAST_STATE" /> <!-- Permission level : normal -->
    <uses-permission android:name="com.google.android.gms.permission.ACTIVITY_RECOGNITION" /> <!-- Permission level : normal -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" /> <!-- for android -->
    <!-- <uses-permission android:name="com.android.launcher.permission.READ_SETTINGS"/> -->
    <!-- <uses-permission android:name="com.android.launcher.permission.WRITE_SETTINGS"/> -->
    <!-- <uses-permission android:name="com.android.launcher.permission.INSTALL_SHORTCUT" /> -->
    <!-- <uses-permission android:name="com.android.launcher.permission.UNINSTALL_SHORTCUT" /> -->
    <!-- for Samsung -->
    <uses-permission android:name="com.sec.android.provider.badge.permission.READ" />
    <uses-permission android:name="com.sec.android.provider.badge.permission.WRITE" /> <!-- for htc -->
    <uses-permission android:name="com.htc.launcher.permission.READ_SETTINGS" />
    <uses-permission android:name="com.htc.launcher.permission.UPDATE_SHORTCUT" /> <!-- for sony -->
    <uses-permission android:name="com.sonyericsson.home.permission.BROADCAST_BADGE" />
    <uses-permission android:name="com.sonymobile.home.permission.PROVIDER_INSERT_BADGE" /> <!-- for apex -->
    <uses-permission android:name="com.anddoes.launcher.permission.UPDATE_COUNT" /> <!-- for solid -->
    <uses-permission android:name="com.majeur.launcher.permission.UPDATE_BADGE" /> <!-- for huawei -->
    <uses-permission android:name="com.huawei.android.launcher.permission.CHANGE_BADGE" />
    <uses-permission android:name="com.huawei.android.launcher.permission.READ_SETTINGS" />
    <uses-permission android:name="com.huawei.android.launcher.permission.WRITE_SETTINGS" /> <!-- for ZUK -->
    <uses-permission android:name="android.permission.READ_APP_BADGE" /> <!-- for OPPO -->
    <uses-permission android:name="com.oppo.launcher.permission.READ_SETTINGS" />
    <uses-permission android:name="com.oppo.launcher.permission.WRITE_SETTINGS" /> <!-- for EvMe -->
    <uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_READ" />
    <uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_WRITE" /> <!-- Permissions required for GCM -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />

    <permission
        android:name="com.neura.cordova.sample.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.neura.cordova.sample.permission.C2D_MESSAGE" />

    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />

    <application
        android:name="android.support.multidex.MultiDexApplication"
        android:allowBackup="true"
        android:debuggable="true"
        android:fullBackupContent="@xml/auto_backup_restrictions"
        android:hardwareAccelerated="true"
        android:icon="@mipmap/icon"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:testOnly="true" >
        <activity
            android:name="com.neura.cordova.sample.MainActivity"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale"
            android:label="@string/activity_name"
            android:launchMode="singleTop"
            android:theme="@android:style/Theme.DeviceDefault.NoActionBar"
            android:windowSoftInputMode="adjustResize" >
            <intent-filter android:label="@string/launcher_name" >
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.adobe.phonegap.push.PushHandlerActivity"
            android:exported="true"
            android:permission="com.neura.cordova.sample.permission.PushHandlerActivity" />

        <receiver android:name="com.adobe.phonegap.push.BackgroundActionButtonHandler" />
        <receiver android:name="com.adobe.phonegap.push.PushDismissedHandler" />

        <service android:name="com.adobe.phonegap.push.FCMService" >
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <service android:name="com.adobe.phonegap.push.PushInstanceIDListenerService" >
            <intent-filter>
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>
        <service
            android:name="com.neura.android.service.CommandService"
            android:enabled="true"
            android:exported="false" />

        <meta-data
            android:name="com.google.android.awareness.API_KEY"
            android:value="AIzaSyAF54Ua-RRu2InI-wGytEGonB-Q3wMad4g" />

        <receiver
            android:name="com.neura.android.receiver.NeuraReceiver"
            android:enabled="true" >
            <intent-filter>

                <!--
                CONNECTIVITY_CHANGE WILL NOT BE RECEIVED ON TARGET API >= 24(NOUGAT) -
                SO, NO SYNCING WHEN INTERNET IS BACK ON WILL BE DONE.
                A workaround it : create a service : InternetConnectivityService
                -->
                <!-- <action android:name="android.net.conn.CONNECTIVITY_CHANGE" /> -->
                <action android:name="com.neura.android.ACTION_LOCATION_CHANGED" />
                <action android:name="com.neura.android.ACTION_DATA_COLLECTION_ACTIVATION_NEEDED" />
                <action android:name="com.neura.android.ACTION_DATA_SYNC_REQUIRED" />
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.intent.action.LOCKED_BOOT_COMPLETED" />
                <action android:name="com.neura.android.ACTION_AUTHENTICATION_COMPLETE" />
                <action android:name="com.neura.android.ACTION_AUTHENTICATION_COMPLETE_BY_NEURA_APP" />
                <action android:name="com.neura.android.ACTION_USER_LOGGED_OUT" />
                <action android:name="android.intent.action.MY_PACKAGE_REPLACED" />
                <action android:name="com.neura.android.ACTION_REGISTER_EVENT" />
                <action android:name="com.neura.android.ACTION_UNREGISTER_EVENT" />
                <action android:name="com.neura.android.ACTION_GCM_REGISTRATION_ID_UPDATED" />
                <action android:name="com.neura.android.ACTION_CALL_PERSON_FROM_NOTIFICATION_ACTION" />
                <action android:name="com.neura.android.ACTION_MESSAGE_PERSON_FROM_NOTIFICATION_ACTION" />
                <action android:name="com.neura.android.ACTION_MUTE_NOTIFICATION_ACTION" />
                <action android:name="com.neura.android.ACTION_NOTIFICATION_CLICKED" />
                <action android:name="com.neura.android.ACTION_NETWORK_IS_ACTIVE" />
                <action android:name="com.neura.android.ACTION_EVENT_FROM_DOZE" />
                <action android:name="com.neura.android.ACTION_SYNC_RAW_DATA_POST_AUTHENTICATION" />
                <action android:name="com.neura.android.SDK_AUTHENTICATE_SUCCESSFUL" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_REPLACED" />
                <action android:name="android.intent.action.PACKAGE_REMOVED" />

                <data android:scheme="package" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.neura.android.service.DataSyncJobService"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="com.neura.android.service.KeepAliveSyncIntentService"
            android:exported="false" />
        <service
            android:name="com.neura.android.service.StopCustomStepDetectorServiceWithWakeLock"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" /> <!-- LoginActivity : AppAuthenticationActivity for login in, create user, reset password -->
        <activity
            android:name="com.neura.dashboard.activity.AppAuthenticationActivity"
            android:exported="false"
            android:screenOrientation="portrait"
            android:theme="@style/Theme.Neura.NoActionBar"
            android:windowSoftInputMode="adjustPan" />
        <activity
            android:name="com.neura.dashboard.activity.AppAuthenticationLightActivity"
            android:exported="false"
            android:screenOrientation="portrait"
            android:theme="@style/Theme.Neura.Transparent" />
        <activity
            android:name="com.neura.dashboard.activity.PickersActivity"
            android:excludeFromRecents="true"
            android:exported="false"
            android:label="@string/neura_sdk_picker_person_title"
            android:noHistory="true"
            android:screenOrientation="portrait"
            android:taskAffinity="com.neura.affinity2"
            android:theme="@style/Theme.AppCompat.Light.NoActionBar"
            android:windowSoftInputMode="adjustPan" />
        <activity
            android:name="com.neura.dashboard.activity.EventSimulationActivity"
            android:exported="false"
            android:screenOrientation="portrait"
            android:theme="@android:style/Theme.Light.NoTitleBar" />
        <activity
            android:name="com.neura.dashboard.activity.TransparentPermissionActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" /> <!-- service for detecting activity recognition for the user (fe walking, driving, still) -->
        <service
            android:name="com.neura.android.service.activity.ActivityRecognitionIntentService"
            android:enabled="true"
            android:exported="false" /> <!-- service for detecting gps/network location changes by demand -->
        <service
            android:name="com.neura.android.service.GeofenceIntentService"
            android:enabled="true"
            android:exported="false" /> <!-- service for detecting gps/network location changes by demand -->
        <service
            android:name="com.neura.android.service.location.NeuraLocationHandler"
            android:enabled="true"
            android:exported="false" /> <!-- service for detecting / counting / calculating steps of the user -->
        <service
            android:name="com.neura.android.service.StepDetectionService"
            android:enabled="true"
            android:exported="false" /> <!-- service for handling the data collection of Neura -->
        <!-- <service -->
        <!-- android:name="com.neura.android.service.DataCollectionWatchdogIntentService" -->
        <!-- android:enabled="true" -->
        <!-- android:exported="true" /> -->
        <!-- service for capturing phone events (screen on/off fe) -->
        <!--
            <service
            android:name="com.neura.android.service.MiscEventsService"
            android:exported="false" />
        -->
        <!-- service for registering for location events from another apps (no extra power needed) -->
        <!-- service for capturing pressure using the phone's sensors -->
        <!-- Disabled in scope of Battery Improvements NDEV-1854 -->
        <!-- <service -->
        <!-- android:name="com.neura.android.service.PressureTrackerService" -->
        <!-- android:exported="false" /> -->
        <service
            android:name="com.neura.android.service.DeviceIdleService"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name="com.neura.android.service.activity.ActivityRecognitionTimerService"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name="com.neura.android.service.SyncSecondaryCollectionsIntentService"
            android:enabled="true"
            android:exported="false" />

        <receiver
            android:name="com.neura.android.receiver.DeviceStateMonitorReceiver"
            android:enabled="true" >
            <intent-filter>
                <action android:name="android.location.PROVIDERS_CHANGED" />
                <action android:name="android.intent.action.ACTION_SHUTDOWN" />
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.intent.action.LOCKED_BOOT_COMPLETED" />
                <action android:name="android.net.wifi.WIFI_STATE_CHANGED" />
                <action android:name="android.bluetooth.adapter.action.STATE_CHANGED" />
                <action android:name="android.intent.action.AIRPLANE_MODE" />
                <action android:name="android.intent.action.BATTERY_LOW" />
                <action android:name="android.intent.action.BATTERY_OKAY" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.neura.android.bt.BluetoothStateReceiver"
            android:enabled="true" >
            <intent-filter>
                <action android:name="android.bluetooth.device.action.ACL_CONNECTED" />
                <action android:name="android.bluetooth.device.action.ACL_DISCONNECTED" />
                <action android:name="android.bluetooth.adapter.action.STATE_CHANGED" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.neura.android.coordinate.CoordinatorService"
            android:enabled="true"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.neura.android.ACTION_NEURA_COORDINATION" />
            </intent-filter>
        </service>
        <service
            android:name="com.neura.core.data.foreground.ForegroundService"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name="com.neura.android.service.RunningModeService"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name="com.neura.android.service.StateAlertService"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name="com.neura.android.service.stepdetection.CustomStepDetectorServiceWithWakelock"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name="com.neura.android.service.InternetConnectivityService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="com.neura.android.service.SyncRawDataService"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name="com.neura.android.service.ActivityLocationWatchdogJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="com.neura.android.service.ActivityLocationWatchdogIntentService"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name="com.neura.android.authentication.PushRequestJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="com.neura.android.service.ScanJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="com.neura.android.service.SyncJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="com.neura.networkproxy.sync.DelayedSync"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <receiver
            android:name="com.neura.android.authentication.PushRequestReceiver"
            android:enabled="true"
            android:exported="false" />
        <receiver
            android:name="com.neura.android.receiver.ScanRequestReceiver"
            android:enabled="true"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.neura.android.ACTION_SCAN_BLE" />
                <action android:name="com.neura.android.ACTION_SCAN_VAP" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.neura.android.receiver.RunningModeBroadcastReceiver"
            android:enabled="true"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.neura.ACTION_RUNNING_MODE" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.neura.core.data.collectors.receivers.GoogleLocationReceiver"
            android:enabled="true"
            android:exported="false" />
        <receiver
            android:name="com.neura.core.data.collectors.receivers.GoogleARReceiver"
            android:enabled="true"
            android:exported="false" />
        <receiver
            android:name="com.neura.core.data.collectors.receivers.GoogleFenceReceiver"
            android:enabled="true"
            android:exported="false" />
        <receiver
            android:name="com.neura.core.data.collectors.receivers.ScreenBroadcastReceiver"
            android:enabled="true" >
            <intent-filter>
                <action android:name="android.intent.action.SCREEN_ON" />
                <action android:name="android.intent.action.SCREEN_OFF" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.neura.core.data.collectors.receivers.BluetoothBroadcastReceiver"
            android:enabled="true" >
            <intent-filter>
                <action android:name="android.bluetooth.device.action.ACL_CONNECTED" />
                <action android:name="android.bluetooth.device.action.ACL_DISCONNECTED" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.neura.core.data.collectors.receivers.PowerBroadcastReceiver"
            android:enabled="true" >
            <intent-filter>
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.neura.core.data.collectors.receivers.AudioHeadsetBroadcastReceiver"
            android:enabled="true" >
            <intent-filter>
                <action android:name="android.intent.action.HEADSET_PLUG" />
            </intent-filter>
        </receiver>
        <!--
             FirebaseMessagingService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
        <service
            android:name="com.google.firebase.messaging.FirebaseMessagingService"
            android:exported="true" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <meta-data
            android:name="android.support.VERSION"
            android:value="26.1.0" />

        <provider
            android:name="androidx.work.impl.WorkManagerInitializer"
            android:authorities="com.neura.cordova.sample.workmanager-init"
            android:exported="false"
            android:multiprocess="true" />

        <service
            android:name="androidx.work.impl.background.systemalarm.SystemAlarmService"
            android:enabled="@bool/enable_system_alarm_service_default"
            android:exported="false" />
        <service
            android:name="androidx.work.impl.background.systemjob.SystemJobService"
            android:enabled="@bool/enable_system_job_service_default"
            android:exported="true"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <receiver
            android:name="androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver"
            android:enabled="true"
            android:exported="false" />
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy"
            android:enabled="false" >
            <intent-filter>
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy"
            android:enabled="false" >
            <intent-filter>
                <action android:name="android.intent.action.BATTERY_OKAY" />
                <action android:name="android.intent.action.BATTERY_LOW" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy"
            android:enabled="false" >
            <intent-filter>
                <action android:name="android.intent.action.DEVICE_STORAGE_LOW" />
                <action android:name="android.intent.action.DEVICE_STORAGE_OK" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy"
            android:enabled="false" >
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.RescheduleReceiver"
            android:enabled="false" >
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.intent.action.TIME_SET" />
                <action android:name="android.intent.action.TIMEZONE_CHANGED" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver"
            android:enabled="@bool/enable_system_alarm_service_default"
            android:exported="false" >
            <intent-filter>
                <action android:name="androidx.work.impl.background.systemalarm.UpdateProxies" />
            </intent-filter>
        </receiver>

        <provider
            android:name="android.arch.lifecycle.ProcessLifecycleOwnerInitializer"
            android:authorities="com.neura.cordova.sample.lifecycle-trojan"
            android:exported="false"
            android:multiprocess="true" />

        <service android:name="com.google.firebase.components.ComponentDiscoveryService" >
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.iid.Registrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
        </service>

        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />

                <category android:name="com.neura.cordova.sample" />
            </intent-filter>
        </receiver>
        <!--
             FirebaseInstanceIdService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
        <service
            android:name="com.google.firebase.iid.FirebaseInstanceIdService"
            android:exported="true" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>

        <provider
            android:name="com.google.firebase.provider.FirebaseInitProvider"
            android:authorities="com.neura.cordova.sample.firebaseinitprovider"
            android:exported="false"
            android:initOrder="100" />

        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <provider
            android:name="com.android.tools.ir.server.InstantRunContentProvider"
            android:authorities="com.neura.cordova.sample.com.android.tools.ir.server.InstantRunContentProvider"
            android:multiprocess="true" />
    </application>

</manifest>